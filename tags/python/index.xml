<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on ruszkow.ski</title>
    <link>https://ruszkow.ski/tags/python/</link>
    <description>Recent content in Python on ruszkow.ski</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Oct 2022 20:20:10 +0100</lastBuildDate>
    <atom:link href="https://ruszkow.ski/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Movie Game: An Introduction</title>
      <link>https://ruszkow.ski/posts/2022-10-18-movie-game_an-introduction/</link>
      <pubDate>Tue, 18 Oct 2022 20:20:10 +0100</pubDate>
      <guid>https://ruszkow.ski/posts/2022-10-18-movie-game_an-introduction/</guid>
      <description>&lt;h1 id=&#34;where-have-you-been-thanks-manchester-orchestra&#34;&gt;Where Have You Been? (thanks Manchester Orchestra)&lt;/h1&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve had a particularly prolonged busy period of work of&amp;hellip; a year or so? Maybe longer? At this point, honestly who can even understand the passage of time any more. Anyway, that seems to have come to and end for now so I&amp;rsquo;m trying to reclaim my evenings and start actually finishing work on time.&lt;/p&gt;&#xA;&lt;p&gt;As part of that (and with a bit more mental bandwidth to spare after I log off), I&amp;rsquo;m trying to pick up some new projects and get back into the routine of doing some programming for fun rather than just for work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Album of the Year 2021</title>
      <link>https://ruszkow.ski/posts/2022-01-01-album-of-the-year-2021/</link>
      <pubDate>Sat, 01 Jan 2022 15:23:11 +0000</pubDate>
      <guid>https://ruszkow.ski/posts/2022-01-01-album-of-the-year-2021/</guid>
      <description>&lt;p&gt;Every year, top champ &lt;a href=&#34;https://twitter.com/philipcopley&#34;&gt;Pip&lt;/a&gt; runs a Facebook group to work out the Album Of The Year within an extended friendship group. For the past few years I&amp;rsquo;ve been making graphs to summarise the results, using some slightly clunky Jupyter notebooks. At first this just analysed the albums chosen by the group, and then last year (after I did my &lt;a href=&#34;https://ruszkow.ski/posts/2020-11-17-dance-dancier-danciest/&#34;&gt;TTNG analysis&lt;/a&gt;) I expanded it to include some Spotify data too.&lt;/p&gt;&#xA;&lt;p&gt;All of the charts for each year can be found on Github &lt;a href=&#34;https://github.com/asongtoruin/AOTY&#34;&gt;here&lt;/a&gt;. I find myself gradually tweaking (and hopefully improving!) the code each year, but it&amp;rsquo;s definitely a bit bolted together so I won&amp;rsquo;t bother going into too much detail about it here. There are two graphs I wanted to talk about a bit more, which is why this post exists! I strongly recommend loading each in a new tab and zooming in to have a closer look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mapping England&#39;s Most Common Pub Names</title>
      <link>https://ruszkow.ski/posts/2021-04-06-mapping-englands-most-common-pub-names/</link>
      <pubDate>Tue, 06 Apr 2021 22:10:11 +0100</pubDate>
      <guid>https://ruszkow.ski/posts/2021-04-06-mapping-englands-most-common-pub-names/</guid>
      <description>&lt;p&gt;After making my &lt;a href=&#34;https://ruszkow.ski/graphs/2021-03-23-pub-names/&#34;&gt;graphs&lt;/a&gt; about the most common pub names in each country in Great Britain, one thing that really stood out was just how many pubs in England are called &lt;em&gt;Red Lion&lt;/em&gt;. Being from the Midlands that made a lot of sense to me, but a few people who I showed it to seemed quite surprised. That got me thinking about what kind of regional variation there is in pub names. So, why not look at the most popular pub names by county? This gives us a chance to dig into QGIS a bit, which I tend to use a lot at work for producing maps but haven&amp;rsquo;t talked about on here yet. Let&amp;rsquo;s dive in.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dance, Dancier, Danciest</title>
      <link>https://ruszkow.ski/posts/2020-11-17-dance-dancier-danciest/</link>
      <pubDate>Tue, 17 Nov 2020 21:50:05 +0000</pubDate>
      <guid>https://ruszkow.ski/posts/2020-11-17-dance-dancier-danciest/</guid>
      <description>&lt;p&gt;Back in the heady days of 2008, Oxford&amp;rsquo;s finest math-rock band TTNG (back then&#xA;still known as This Town Needs Guns) opened their&#xA;&lt;a href=&#34;https://open.spotify.com/album/2217d2VN6Nn3zzU9mlApdK?si=nfr6tlwHQfKoMAmIfsSrtQ&#34;&gt;self-titled release&lt;/a&gt;&#xA;with a (fantastic) song providing a rather curious declaration -&#xA;&lt;a href=&#34;https://open.spotify.com/track/2g14gU0ZxGZ3Te9EjFsT25?si=efWS3BTTQziLPyavvecTcw&#34;&gt;&lt;em&gt;26 Is Dancier Than 4&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Jump forward 12 years to 2020, and I&amp;rsquo;ve been digging around a bit in the Spotify&#xA;API to better understand what data it provides and try to find some fun things&#xA;to plot. In doing so, I spotted (geddit?) that within the object model, every&#xA;track has a series of attributes, one of which is called &lt;em&gt;danceability&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Albums to Ruin: database operations</title>
      <link>https://ruszkow.ski/posts/2020-04-20-albums-to-ruin-database-operations/</link>
      <pubDate>Mon, 20 Apr 2020 10:30:00 +0100</pubDate>
      <guid>https://ruszkow.ski/posts/2020-04-20-albums-to-ruin-database-operations/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This post is a continuation of the development of my &lt;em&gt;Albums to Ruin&lt;/em&gt; Twitter&#xA;bot. This is the first part of actual development of the bot - information&#xA;on the concept and outline can be found in the&#xA;&lt;a href=&#34;https://ruszkow.ski/posts/2020-04-14-albums-to-ruin-initial-concept/&#34;&gt;Initial Concept post&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&amp;rsquo;m going to cover the database operations required to power the&#xA;Twitter bot and keep track of what has already been posted and the queue of&#xA;albums to post. This carries on from some of the work done in&#xA;&lt;a href=&#34;https://ruszkow.ski/posts/2020-04-17-albums-to-ruin-working-with-the-spotify-api/&#34;&gt;the previous post&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Albums to Ruin: working with the Spotify API</title>
      <link>https://ruszkow.ski/posts/2020-04-17-albums-to-ruin-working-with-the-spotify-api/</link>
      <pubDate>Fri, 17 Apr 2020 11:30:00 +0100</pubDate>
      <guid>https://ruszkow.ski/posts/2020-04-17-albums-to-ruin-working-with-the-spotify-api/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This post is a continuation of the development of my &lt;em&gt;Albums to Ruin&lt;/em&gt; Twitter&#xA;bot. This is the first part of actual development of the bot - information&#xA;on the concept and outline can be found in the&#xA;&lt;a href=&#34;https://ruszkow.ski/posts/2020-04-14-albums-to-ruin-initial-concept/&#34;&gt;Initial Concept post&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&amp;rsquo;m going to cover the process required for getting the recently&#xA;played tracks from Spotify and the URL for the album art.&lt;/p&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;&#xA;&lt;p&gt;First of all, we need to register an application with Spotify. This is done via&#xA;the &lt;a href=&#34;https://developer.spotify.com/dashboard/applications&#34;&gt;Developer Dashboard&lt;/a&gt;&#xA;and is relatively straightforward. This provides us with the &lt;code&gt;Client ID&lt;/code&gt; and&#xA;&lt;code&gt;Client Secret&lt;/code&gt; keys that let us access the APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Travis &#43; PyInstaller &#43; GitHub Releases</title>
      <link>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</guid>
      <description>&lt;p&gt;Part of one of the projects I&amp;rsquo;ve been working on in my day job recently has&#xA;involved taking over the development of a tool that implements some simple data&#xA;anonymisation. This includes the deployment of an executable that can be used by&#xA;non-technical staff, who will likely be the main users of the tool. It&amp;rsquo;s also&#xA;highly likely that all of those staff will be working on Windows PCs. As the&#xA;executable is created through PyInstaller, this means the executable needs to&#xA;be built in a Windows environment. Initially, I&amp;rsquo;d just been doing this locally&#xA;on my PC to create the executable for distribution.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
