<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on ruszkow.ski</title>
    <link>https://ruszkow.ski/tags/github/</link>
    <description>Recent content in GitHub on ruszkow.ski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 21 Jan 2021 22:06:55 +0000</lastBuildDate><atom:link href="https://ruszkow.ski/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Actions on a Schedule</title>
      <link>https://ruszkow.ski/posts/2021-01-21-github-actions-on-a-schedule/</link>
      <pubDate>Thu, 21 Jan 2021 22:06:55 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/2021-01-21-github-actions-on-a-schedule/</guid>
      <description>Over the past year or so I&amp;rsquo;ve been using GitHub Actions on a few different projects for building documentation and executables. The direct integration into GitHub makes it a bit more convenient than Travis, and being able to use predefined Actions makes simple processes way easier to set up.
However, one thing I hadn&amp;rsquo;t noticed until recently was that you can trigger workflows to run on a schedule. This is an extremely powerful feature that, to me, seems under-publicised.</description>
    </item>
    
    <item>
      <title>Travis &#43; PyInstaller &#43; GitHub Releases</title>
      <link>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</guid>
      <description>Part of one of the projects I&amp;rsquo;ve been working on in my day job recently has involved taking over the development of a tool that implements some simple data anonymisation. This includes the deployment of an executable that can be used by non-technical staff, who will likely be the main users of the tool. It&amp;rsquo;s also highly likely that all of those staff will be working on Windows PCs. As the executable is created through PyInstaller, this means the executable needs to be built in a Windows environment.</description>
    </item>
    
  </channel>
</rss>
