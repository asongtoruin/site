<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ruszkow.ski</title>
    <link>https://ruszkow.ski/posts/</link>
    <description>Recent content in Posts on ruszkow.ski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 06 Apr 2021 22:10:11 +0100</lastBuildDate><atom:link href="https://ruszkow.ski/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mapping England&#39;s Most Common Pub Names</title>
      <link>https://ruszkow.ski/posts/2021-04-06-mapping-englands-most-common-pub-names/</link>
      <pubDate>Tue, 06 Apr 2021 22:10:11 +0100</pubDate>
      
      <guid>https://ruszkow.ski/posts/2021-04-06-mapping-englands-most-common-pub-names/</guid>
      <description>After making my graphs about the most common pub names in each country in Great Britain, one thing that really stood out was just how many pubs in England are called Red Lion. Being from the Midlands that made a lot of sense to me, but a few people who I showed it to seemed quite surprised. That got me thinking about what kind of regional variation there is in pub names.</description>
    </item>
    
    <item>
      <title>GitHub Actions on a Schedule</title>
      <link>https://ruszkow.ski/posts/2021-01-21-github-actions-on-a-schedule/</link>
      <pubDate>Thu, 21 Jan 2021 22:06:55 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/2021-01-21-github-actions-on-a-schedule/</guid>
      <description>Over the past year or so I&amp;rsquo;ve been using GitHub Actions on a few different projects for building documentation and executables. The direct integration into GitHub makes it a bit more convenient than Travis, and being able to use predefined Actions makes simple processes way easier to set up.
However, one thing I hadn&amp;rsquo;t noticed until recently was that you can trigger workflows to run on a schedule. This is an extremely powerful feature that, to me, seems under-publicised.</description>
    </item>
    
    <item>
      <title>Dance, Dancier, Danciest</title>
      <link>https://ruszkow.ski/posts/2020-11-17-dance-dancier-danciest/</link>
      <pubDate>Tue, 17 Nov 2020 21:50:05 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/2020-11-17-dance-dancier-danciest/</guid>
      <description>Back in the heady days of 2008, Oxford&amp;rsquo;s finest math-rock band TTNG (back then still known as This Town Needs Guns) opened their self-titled release with a (fantastic) song providing a rather curious declaration - 26 Is Dancier Than 4.
Jump forward 12 years to 2020, and I&amp;rsquo;ve been digging around a bit in the Spotify API to better understand what data it provides and try to find some fun things to plot.</description>
    </item>
    
    <item>
      <title>Albums to Ruin: database operations</title>
      <link>https://ruszkow.ski/posts/2020-04-20-albums-to-ruin-database-operations/</link>
      <pubDate>Mon, 20 Apr 2020 10:30:00 +0100</pubDate>
      
      <guid>https://ruszkow.ski/posts/2020-04-20-albums-to-ruin-database-operations/</guid>
      <description>Introduction This post is a continuation of the development of my Albums to Ruin Twitter bot. This is the first part of actual development of the bot - information on the concept and outline can be found in the Initial Concept post.
In this post, I&amp;rsquo;m going to cover the database operations required to power the Twitter bot and keep track of what has already been posted and the queue of albums to post.</description>
    </item>
    
    <item>
      <title>Albums to Ruin: working with the Spotify API</title>
      <link>https://ruszkow.ski/posts/2020-04-17-albums-to-ruin-working-with-the-spotify-api/</link>
      <pubDate>Fri, 17 Apr 2020 11:30:00 +0100</pubDate>
      
      <guid>https://ruszkow.ski/posts/2020-04-17-albums-to-ruin-working-with-the-spotify-api/</guid>
      <description>Introduction This post is a continuation of the development of my Albums to Ruin Twitter bot. This is the first part of actual development of the bot - information on the concept and outline can be found in the Initial Concept post.
In this post, I&amp;rsquo;m going to cover the process required for getting the recently played tracks from Spotify and the URL for the album art.
Getting Started First of all, we need to register an application with Spotify.</description>
    </item>
    
    <item>
      <title>Albums to Ruin: Initial Concept</title>
      <link>https://ruszkow.ski/posts/2020-04-14-albums-to-ruin-initial-concept/</link>
      <pubDate>Tue, 14 Apr 2020 11:00:00 +0100</pubDate>
      
      <guid>https://ruszkow.ski/posts/2020-04-14-albums-to-ruin-initial-concept/</guid>
      <description>Inspiration Recently, I&amp;rsquo;ve seen a few posts shared around from the Instagram account colorpalette.cinema. I&amp;rsquo;m a big fan of a nice colour palette (indeed, a few years ago I had a Twitter bot running that did something similar with Marvel comics covers) and it got me thinking about whether I could do something similar of my own.
The idea, and an initial outline As you might have guessed from the post title, my plan is to make something similar for album covers.</description>
    </item>
    
    <item>
      <title>Travis &#43; PyInstaller &#43; GitHub Releases</title>
      <link>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/2019-10-21-travis-&#43;-pyinstaller-&#43;-github-releases/</guid>
      <description>Part of one of the projects I&amp;rsquo;ve been working on in my day job recently has involved taking over the development of a tool that implements some simple data anonymisation. This includes the deployment of an executable that can be used by non-technical staff, who will likely be the main users of the tool. It&amp;rsquo;s also highly likely that all of those staff will be working on Windows PCs. As the executable is created through PyInstaller, this means the executable needs to be built in a Windows environment.</description>
    </item>
    
    <item>
      <title>An Initial Set-Up of PiHole</title>
      <link>https://ruszkow.ski/posts/pihole-setup/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ruszkow.ski/posts/pihole-setup/</guid>
      <description>PiHole Set-Up Equipment  Already had most of the things required, needed:  Micro-USB to Ethernet cable microSD card Short Ethernet cable    Setting up the Raspberry Pi  Download Raspbian Lite image (for the time being, we only want to use this for PiHole) Flash onto microSD with Etcher Plug everything in Cock-up 1: Raspbian now disables SSH by default. Need to plug in a screen Change the default password on activating SSH (we&amp;rsquo;ll fix this later but it&amp;rsquo;s still good to get this done early) Shutdown, unplug screen etc, set up cables as actually desired and re-plug in SSH in!</description>
    </item>
    
  </channel>
</rss>
